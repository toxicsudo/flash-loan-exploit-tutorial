import { ethers } from "hardhat";

async function main() {
  const FlashLoanExample = await ethers.getContractFactory("FlashLoanExample");
  const flashLoanExample = await FlashLoanExample.deploy();

  await flashLoanExample.deployed();

  console.log(`FlashLoanExample deployed to ${flashLoanExample.address}`);

  //deploy Attacker1 contract
  const Attacker1 = await ethers.getContractFactory("Attacker1");
  const attacker1 = await Attacker1.deploy();

  await attacker1.deployed();

  console.log(`Attacker1 Contract deployed to ${attacker1.address}`);

  //deploy initial contract
  const initialAttacker = await ethers.getContractFactory("InitialAttacker");
  const initialAttackerContract = await initialAttacker.deploy();

  await initialAttackerContract.deployed();

  console.log(`initialAttackerContract deployed to ${initialAttackerContract.address}`);
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
